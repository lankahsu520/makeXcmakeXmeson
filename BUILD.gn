print(">> 02 - BUILD.gn")

#** librarys **
LIBXXX_SO = [ "libhelloworld.so" ]
# https://gn.googlesource.com/gn/+/main/docs/reference.md#func_shared_library
shared_library("helloworld_shared") {
  sources = [
    "helloworld_dbg.c",
    "helloworld_dbg.h",
  ]

  output_name = "helloworld"
  #print(">> " + output_name)
  #output_dir = "$root_out_dir"

  # -DPJ_LANKA520V2
  defines = [ "PJ_LANKA520V2" ]

  if ( is_debug == true )
  {
    print(">> shared_library / helloworld_shared - $configs")
  }
}

LIBXXX_A = [ "libhelloworld_static.a" ]
# https://gn.googlesource.com/gn/+/main/docs/reference.md#func_static_library
static_library("helloworld_static") {
  sources = [
    "helloworld_dbg.c",
    "helloworld_dbg.h",
  ]

  output_name = "helloworld_static"

  #output_dir = "$root_out_dir/libs"

  defines = [ "PJ_LANKA520V3" ]

  if ( is_debug == true )
  {
    print(">> static_library / helloworld_static - $configs")
  }
}

print(">> (LIBXXX_SO: $LIBXXX_SO)")
print(">> (LIBXXX_A: $LIBXXX_A)")

#** Target (CLEAN_BINS) **

print(">> (CLEAN_BINS: $CLEAN_BINS)")

#** Target (DUMMY_BINS) **
DUMMY_BINS += [ "helloworld" ]
# https://gn.googlesource.com/gn/+/main/docs/reference.md#func_executable
executable("helloworld-123") {
  sources = [ "helloworld-123.c" ]

  deps = [
    ":helloworld_shared",
    ":helloworld_static",
  ]

  if ( is_debug == true )
  {
    print(">> executable / helloworld - $configs")
  }
}

DUMMY_BINS += [ "pipe2" ]
executable("pipe2")
{
  sources = [ "pipe2.c" ]

  if ( is_debug == true )
  {
    print(">> executable / pipe2 - $configs")
  }
}

DUMMY_BINS += [ "helloworld" ]
executable("helloworld")
{
  sources = [ "helloworld.c" ]

  if ( is_debug == true )
  {
    print(">> executable / helloworld - $configs")
  }
}

print(">> (DUMMY_BINS: $DUMMY_BINS)")

#** Target (CONFS) **
#CONFS= []
print(">> (CONFS: $CONFS)")

#** HEADER_FILES **
HEADER_FILES += [ "helloworld_dbg.h" ]
print(">> (HEADER_FILES: $HEADER_FILES)")

# https://gn.googlesource.com/gn/+/main/docs/reference.md#func_copy
# .PHONY: install
# use |$target_out_dir| or |$target_gen_dir| to reference the output 
copy("install_inc") {
  sources  = HEADER_FILES
  outputs = [ "$target_out_dir/../include/{{source_file_part}}" ]
}

# https://gn.googlesource.com/gn/+/main/docs/reference.md#func_group
# .PHONY: others
# ninja -v -C build_xxx others
group("others") {
  deps = [
    # This will expand to the name "//tutorial:tutorial" which is the full name
    # of our new target. Run "gn help labels" for more.
    "//cppTest"
    ,":install_inc"
 ]

  if ( is_debug == true )
  {
    print(">> (target_gen_dir: $target_gen_dir)")
    print(">> (target_out_dir: $target_out_dir)")
    print(">> (root_build_dir: $root_build_dir)")
    print(">> (root_out_dir: $root_out_dir)")
  }
}
